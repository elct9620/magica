{
  "name": "Magica",
  "tagline": "A tool to build C++ project",
  "body": "# Magica\r\n[![Gem Version](https://badge.fury.io/rb/magica.svg)](https://badge.fury.io/rb/magica)\r\n\r\nMagica is a build script based on Rake, it helps you compile C and C++ project with easier way.\r\n\r\n## Installation\r\n\r\n    $ gem install magica\r\n\r\n## Usage\r\n\r\nLike Rake, you need a `Magicafile` to setup your build task.\r\n\r\nThe magica provides `magica init` command helps your start your first project.\r\n\r\n### Build Task\r\n\r\nTo define a new build task, you can use the `build` DSL to create it.\r\n\r\n`build :main`\r\n\r\nIf you want to do more setting for your project, you can do like below.\r\n\r\n```ruby\r\nbuild :main do\r\n  dynamic_library \"sdl2\" # Use pkg-config to find dependency and add to build command\r\n  include_path \"extra/include\" # Add include path\r\n  define :debug # Add defines when build\r\n  flag \"-Wall\" # Add build flags\r\n  source \"src/**/*.cpp\" # Define source file, it will use FileList to scan it\r\n  dest \"build\" # Define the build files to place\r\n  use :cxx # If your project is C++ project, set it to use C++ compiler instead C compiler\r\nend\r\n```\r\n\r\n### Dependency\r\n\r\nIf you have some 3rd-party library wants to include, the `dependency` can help you compile it.\r\n\r\n**WARNING**: Current only support git as version control\r\n\r\n```ruby\r\nbuild :main do\r\n  dependency :mruby do\r\n    source \"git@github.com:mruby/mruby.git\" # Define source\r\n    version \"1.2.0\" # Define version ( tag or branch )\r\n    command \"./minirake\" # The build command\r\n\r\n    env :MRUBY_CONFIG, File.join(Dir.pwd, 'mruby_config.rb') # Build environment variable\r\n\r\n    install_dir \"#{@dir}/build/host/lib\" # The compiled files path\r\n    static_library \"libmruby.a\", \"libmruby_core.a\" # The library name\r\n  end\r\nend\r\n```\r\n\r\n**NOTICE**: Current the build task will direct use install directory's file as link object.\r\n\r\n## Development\r\n\r\nAfter checking out the repo, run `bin/setup` to install dependencies. Then, run `rake spec` to run the tests. You can also run `bin/console` for an interactive prompt that will allow you to experiment.\r\n\r\nTo install this gem onto your local machine, run `bundle exec rake install`. To release a new version, update the version number in `version.rb`, and then run `bundle exec rake release`, which will create a git tag for the version, push git commits and tags, and push the `.gem` file to [rubygems.org](https://rubygems.org).\r\n\r\n## Contributing\r\n\r\nBug reports and pull requests are welcome on GitHub at https://github.com/elct9620/magica.\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}